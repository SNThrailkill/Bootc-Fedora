variables:
  BUILD_TYPE:
    value: none
    options: 
      - "none"
      - "ami"
      - "qcow2"
      - "vmdk"
      - "anaconda-iso"
      - "raw"
      - "vhd"
      - "gce"
    description: "The image type to build"

default:
  image: docker:28

.registry-login:
  before_script:
    - cp ${REGISTRY_CONF} ./auth.json
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build-base:
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE
  extends: .registry-login
  script:
    - docker build -f Containerfile --target base -t $IMAGE_TAG/base:latest .
    - docker push $IMAGE_TAG/base:latest

build-nginx:
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE
  extends: .registry-login
  script:
    - docker build -f Containerfile --target nginx -t $IMAGE_TAG/nginx:latest .
    - docker push $IMAGE_TAG/nginx:latest

build-k3s-server:
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE
  extends: .registry-login
  script:
    - docker build -f Containerfile --target k3s-server --secret id=K3S_TOKEN,env=K3S_TOKEN -t $IMAGE_TAG/k3s-server:latest .
    - docker push $IMAGE_TAG/k3s-server:latest

build-k3s-agent:
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE
  extends: .registry-login
  script:
    - docker build -f Containerfile --target k3s-agent --secret id=K3S_TOKEN,env=K3S_TOKEN -t $IMAGE_TAG/k3s-agent:latest .
    - docker push $IMAGE_TAG/k3s-agent:latest

build-image:
  image: quay.io/podman/stable
  stage: build
  variables:
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic"
    IMAGE_NAME: registry.gitlab.com/localthrailkill/bootc-fedora/base:latest
  before_script:
    - cp ${REGISTRY_CONF} ./auth.json
    - podman login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - podman pull $IMAGE_NAME
    - |
      podman run --privileged --security-opt label=type:unconfined_t \
      -v $(pwd)/output:/output \
      -v /var/lib/containers/storage:/var/lib/containers/storage \
      quay.io/centos-bootc/bootc-image-builder:latest \
      --type $BUILD_TYPE \
      $IMAGE_NAME
    - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file output/bootiso "${PACKAGE_REGISTRY_URL}/${CI_PROJECT_NAME}.iso"'
  rules:
    - if: $BUILD_TYPE != "none"
  artifacts:
    paths:
      - $(pwd)/output/*